// This is an autogenerated file from running `firebase genkit:flow`.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for automatically suggesting relevant tags for uploaded pet documents using AI.
 *
 * - `suggestTags`: A function that takes a document description and suggests relevant tags.
 * - `SmartTaggingInput`: The input type for the `suggestTags` function.
 * - `SmartTaggingOutput`: The output type for the `suggestTags` function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SmartTaggingInputSchema = z.object({
  documentDescription: z
    .string()
    .describe('A description of the pet document to be tagged.'),
});
export type SmartTaggingInput = z.infer<typeof SmartTaggingInputSchema>;

const SmartTaggingOutputSchema = z.object({
  tags: z
    .array(z.string())
    .describe('An array of relevant tags for the pet document.'),
});
export type SmartTaggingOutput = z.infer<typeof SmartTaggingOutputSchema>;

export async function suggestTags(input: SmartTaggingInput): Promise<SmartTaggingOutput> {
  return smartTaggingFlow(input);
}

const smartTaggingPrompt = ai.definePrompt({
  name: 'smartTaggingPrompt',
  input: {schema: SmartTaggingInputSchema},
  output: {schema: SmartTaggingOutputSchema},
  prompt: `You are an AI assistant that suggests relevant tags for pet documents.
  Based on the description of the document, suggest a list of tags that can be used to categorize the document.
  The tags should be relevant to the content of the document.

  Description: {{{documentDescription}}}

  Tags:`,
});

const smartTaggingFlow = ai.defineFlow(
  {
    name: 'smartTaggingFlow',
    inputSchema: SmartTaggingInputSchema,
    outputSchema: SmartTaggingOutputSchema,
  },
  async input => {
    const {output} = await smartTaggingPrompt(input);
    return output!;
  }
);
